name: Fetch and email papers

on:
  schedule:
    - cron: '15 * * * *'     # 每天早上 9 点运行（UTC+8）
  workflow_dispatch:  # 手动触发，可改为 schedule / push

jobs:
  fetch_and_email:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Restore sent history cache
        id: cache-sent
        uses: actions/cache@v4
        with:
          path: sent_history.json
          key: arxiv-sent-history

      - name: Install dependencies
        run: pip install arxiv reportlab

      - name: Fetch papers and generate PDF
        run: |
          python arxiv_pdf.py "${{ vars.PAPER_KEYWORD }}" "${{ vars.NUM_PAPERS }}"
      - name: Send Email
        env:
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
        run: |
          python <<EOF
          import smtplib, datetime, logging
          from email.header import Header
          from email.utils import formataddr, parseaddr
          from email.mime.text import MIMEText
          from email.mime.multipart import MIMEMultipart
          from email.mime.application import MIMEApplication

          logging.basicConfig(level=logging.INFO)
          logger = logging.getLogger("email")

          def _format_addr(s):
              name, addr = parseaddr(s)
              return formataddr((Header(name, 'utf-8').encode(), addr))

          sender = "${EMAIL_USER}"
          receiver = "${EMAIL_TO}"
          password = "${EMAIL_PASS}"
          smtp_server = "smtp.qq.com"
          smtp_port_tls = 587
          smtp_port_ssl = 465

          today = datetime.datetime.now().strftime('%Y/%m/%d')
          html = f"<p>你好，</p><p>附件是你订阅的 arXiv 论文合集（{today}）。</p><p>祝阅读愉快！</p>"

          msg = MIMEMultipart()
          msg['From'] = _format_addr(f"Github Action <{sender}>")
          msg['To'] = _format_addr(f"You <{receiver}>")
          msg['Subject'] = Header(f"Daily arXiv {today}", 'utf-8').encode()

          msg.attach(MIMEText(html, 'html', 'utf-8'))

          with open("papers.pdf", "rb") as f:
              part = MIMEApplication(f.read(), _subtype="pdf")
              part.add_header('Content-Disposition', 'attachment', filename="papers.pdf")
              msg.attach(part)

          try:
              server = smtplib.SMTP(smtp_server, smtp_port_tls)
              server.starttls()
              logger.info("Using TLS")
          except Exception as e:
              logger.warning(f"Failed to use TLS: {e}")
              logger.warning(f"Trying SSL...")
              server = smtplib.SMTP_SSL(smtp_server, smtp_port_ssl)

          server.login(sender, password)
          server.sendmail(sender, [receiver], msg.as_string())
          server.quit()
          logger.info("Email sent successfully")
          EOF
      - name: Upload sent history for record
        uses: actions/upload-artifact@v4
        with:
          name: sent-history
          path: sent_history.json
